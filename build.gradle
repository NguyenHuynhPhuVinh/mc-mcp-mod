plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenCentral()
}

// Cấu hình để đóng gói các thư viện phụ thuộc vào JAR
configurations {
	include
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// Thêm Javalin để tạo HTTP server - vừa implementation để sử dụng trong phát triển, vừa include để đóng gói vào JAR
	def javalinVersion = "5.6.3"
	implementation("io.javalin:javalin:${javalinVersion}") {
		// Loại bỏ các thư viện SLF4J để tránh xung đột với Minecraft
		exclude group: 'org.slf4j'
	}
	include("io.javalin:javalin:${javalinVersion}") {
		// Loại bỏ các thư viện SLF4J để tránh xung đột với Minecraft
		exclude group: 'org.slf4j'
	}
	
	// JSON processing - Gson đã có sẵn trong Minecraft
	implementation "com.google.code.gson:gson:2.10.1"
	
	// Jackson để xử lý JSON cho Javalin - vừa implementation để sử dụng trong phát triển, vừa include để đóng gói vào JAR
	def jacksonVersion = "2.15.0"
	implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
	implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
	implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
	include "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
	include "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
	include "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
	
	// Đóng gói các thư viện phụ thuộc vào JAR
	from {
		configurations.include.collect { it.isDirectory() ? it : zipTree(it) }
	}
	
	// Xử lý các xung đột về file
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}